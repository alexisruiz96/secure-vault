@startuml GetStorage
!pragma teoz true

box "Client" #LightBlue
box "React App" #LightSkyBlue
actor User
participant App
end box
box "Secure Vault Library" #LightSkyBlue
participant "Vault Library" as SVC
end box
end box
box "Server" #LightSalmon
participant Server
database PostgreSQL
end box

activate App
    App -> SVC: secureVault.getStorage()
        activate SVC
        SVC -> Server: GET files/storage
        activate Server
        group Passport Jwt Strategy\n
        activate Server
            Server -> Server: Verify token
            Server -> PostgreSQL: Check username exists
            Server <-- PostgreSQL: Database Response
            Server -> Server: Passport Jwt Strategy\nCallback
        deactivate Server
        end
        Server -> PostgreSQL: Get data,epochtime,salt data
        Server <-- PostgreSQL: Database Response
        Server -> Google: Get Signed URL
        Server <-- Google: Signed URL
        SVC <-- Server: Response 201 with\n{message,storageUrl\necpohtime,salt_data}
        deactivate Server
        SVC -> SVC: Download Storage File\nfrom Url on memory
        SVC -> SVC: Decrypt Storage File\nwith Encryption Key
        App <-- SVC: Response 201 with\n{decrypted storage, epochtime}
        deactivate SVC
    App -> App: Set Decrypted Storage\non Json Viewer\n
    App -> App: Set epochtime\non Local Storage
    User <-- App: Show Decrypted Storage on Json Viewer
deactivate App
